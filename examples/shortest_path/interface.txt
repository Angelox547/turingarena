// adjacency list
// N = number of nodes
// D[u] = degree of node u
// A[u][i] = i-th out-neighbor of node u
// W[u][i] = weight of i-th out-edge of node u

procedure init(N, Q, D[], A[][], W[][]);

function shortest_path(u, v);

main {
    read N;

    for u to N {
        read D[u];
        for i to D[u] {
            read A[u][i], W[u][i];
        }
    }

    read Q;

    call init(N, Q, D, A, W);

    for i to Q {
        read u, v;
        call ans = shortest_path(u, v);
        write ans;
    }
}
