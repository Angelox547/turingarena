{% import "macro.cpp.jinja2" as macro %}

// Global input/output
{% for variable in algorithm.variables.values() -%}
{%- if variable.array_dimensions %}
// {{variable.type}} {{variable.name}}{% for array_dimension in variable.array_dimensions -%}[{{array_dimension}}]{% endfor %}
{%- endif %}
extern {{variable.type}} {% for array_dimension in variable.array_dimensions %}*{% endfor %}{{variable.name}};
{% endfor %}

// Callback functions
{% for function in algorithm.functions.values() -%}
{{function.return_type}} {{function.name}}({{macro.parameters_prototype(function)}});
{%- endfor %}

// Functions to implement
{% for function in algorithm.functions.values() -%}
{{function.return_type}} {{function.name}} (
  {%- for parameter in function.parameters.values() -%}
  {%- if not loop.first -%}{{' '}}{%- endif -%}
  {{parameter.type}} {{parameter.name}}
  {%- if not loop.last -%} , {%- endif -%}
  {%- endfor -%}
) {
    // TODO: implement
}
{% endfor %}
