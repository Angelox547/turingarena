{% import "macro.cpp.jinja2" as macro %}

#include <bits/stdc++.h>

{% for variable in algorithm.variables.values() -%}
{{variable.type}} {% for array_dimension in variable.array_dimensions %}*{% endfor %}{{variable.name}};
{% endfor %}

{% for function in algorithm.functions.values() -%}
{{ macro.function_prototype(function) }}
{% endfor %}

{% for function in algorithm.functions.values() -%}
{{ macro.receive_call(function) }}
{% endfor %}

{% for variable in algorithm.variables.values() -%}
{{ macro.receive_set_global(variable) }}
{% endfor %}

{% for function in algorithm.callback_functions.values() -%}
{{ macro.callback(function, algorithm.functions.values(), algorithm.variables.values()) }}
{% endfor %}

int main() {
    {{ macro.process_command('int', algorithm.functions.values(), algorithm.variables.values()) }}
}
