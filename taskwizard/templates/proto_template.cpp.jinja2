#include <bits/stdc++.h>

{% for function in algorithm.functions.values() -%}
{{function.return_type}} {{function.name}}(
    {%- for parameter in function.parameters.values() -%}
    {%- if not loop.first -%}{{' '}}{%- endif -%}
    {{parameter.type}} {{parameter.name}}
    {%- if not loop.last -%} , {%- endif -%}
    {%- endfor -%}
);{% endfor %}

{% for function in algorithm.functions.values() -%}
void receive_call_{{function.name}}() {
    {% for parameter in function.parameters.values() %}
    {{parameter.type}} {{parameter.name}};
    scanf(" %d", &{{parameter.name}});
    {%- endfor %}
  
    {{function.return_type}} result = {{function.name}}(
    {%- for parameter in function.parameters.values() -%}
    {{parameter.name}}
    {%- if not loop.last -%} , {%- endif -%}
    {%- endfor -%}
    );
  
    printf("%s\n", "return");
    printf("%d\n", result);
}
{% endfor -%}

{% for function in algorithm.functions.values() -%}
{{function.return_type}} perform_call_{{function.name}}(
    {%- for parameter in function.parameters.values() -%}
    {%- if not loop.first -%}{{' '}}{%- endif -%}
    {{parameter.type}} {{parameter.name}}
    {%- if not loop.last -%} , {%- endif -%}
    {%- endfor -%}
) {
    printf("%s\n", "{{function.name}}");

    {% for parameter in function.parameters.values() %}
    printf("%d\n", {{parameter.name}});
    {%- endfor %}
    
    while(1) {
        char s[51];
        scanf("%50s", s);
        if(!strcmp(s, "return")) {
            {{function.return_type}} result;
            scanf(" %d", &result);
            return result;
        }
        
        {% for other_function in algorithm.functions.values() -%}
        if(!strcmp(s, "{{other_function.name}}")) {
            receive_call_{{other_function.name}}();
        }
        {% endfor %}
    }
}

{{function.return_type}} {{function.name}}(
    {%- for parameter in function.parameters.values() -%}
    {%- if not loop.first -%}{{' '}}{%- endif -%}
    {{parameter.type}} {{parameter.name}}
    {%- if not loop.last -%} , {%- endif -%}
    {%- endfor -%}
) {
  
    {{function.return_type}} result;
    scanf(" %d", &result);
  
    return result;  
}
{% endfor %}

int main() {
    {% for variable in algorithm.variables.values() -%}
    {% if variable.is_input -%}
    scanf(" %d", &{{variable.name}});
    {% endif -%}
    {% endfor %}
  
    {% for variable in algorithm.variables.values() -%}
    {% if variable.is_output -%}
    printf("%d\n", {{variable.name}});
    {% endif -%}
    {% endfor %}
}


