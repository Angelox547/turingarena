interface types_valid {
    var int i;
    var int[] ia;
    var int[][] iaa;

    function get_i() -> int;
    function get_ia(int j) -> int;
    function get_iaa(int j, int k) -> int;

    main {
        input i;
        alloc ia, iaa : i;
        for(j : i) {
            input ia[j];
            alloc iaa[j] : ia[j];
            for(k : ia[j]) {
                input iaa[j][k];
            }
        }

        var int o;
        var int[] oa;
        var int[][] oaa;

        call get_i() -> o;
        alloc oa, oaa : i;
        for(j : i) {
            call get_ia(j) -> oa[j];
            alloc oaa[j] : ia[j];
            for(k : ia[j]) {
                call get_iaa(j, k) -> oaa[j][k];
            }
        }

        output o;
        for(j : i) {
            output oa[j];
            for(k : ia[j]) {
                output oaa[j][k];
            }
        }
    }
}
