before_script:
  - export BASE_VERSION=0.0.2
  - export DEV_RELEASE_SEGMENT=.dev$TRAVIS_BUILD_NUMBER
  - export DATE_SEGMENT=$(date -u -Idate | tr -d -)
  - export BRANCH_SEGMENT=$(echo $TRAVIS_BRANCH | tr -d -c '[:alpha:]')
  - export LOCAL_VERSION_SEGMENT=+$BRANCH_SEGMENT.$DATE_SEGMENT.sha$TRAVIS_COMMIT
  - export CLI_VERSION=$BASE_VERSION$DEV_RELEASE_SEGMENT$LOCAL_VERSION_SEGMENT
  - export DOCKER_TAGGED_BASE_IMAGE=turingarena/turingarena-base:travis-$TRAVIS_BUILD_NUMBER
  - export DOCKER_IMAGE=turingarena/turingarena:$BASE_VERSION$DEV_RELEASE_SEGMENT

sudo: required

language: python
python:
  - "3.6"

services:
  - docker

cache: yarn

install:
  - wget https://hyper-install.s3.amazonaws.com/hyper-linux-x86_64.tar.gz
  - tar xzf hyper-linux-x86_64.tar.gz -C $TRAVIS_BUILD_DIR
  - npm install -g serverless
  - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
  - >
    $TRAVIS_BUILD_DIR/hyper
    config
    --default-region=us-west-1
    --accesskey=$HYPERSH_ACCESS_KEY
    --secretkey=$HYPERSH_SECRET_KEY

stages:
  - base_build
  - build
  - deploy

jobs:
  include:
    - if: type == api AND commit_message =~ /update-base/
      stage: base_build
      script:
        - docker build -t $DOCKER_TAGGED_BASE_IMAGE -f Dockerfile.base .
        - docker push $DOCKER_TAGGED_BASE_IMAGE
    - stage: build
      script:
        - >
          docker build
          --network none
          --build-arg BASE_IMAGE=$DOCKER_BASE_IMAGE
          -t $DOCKER_IMAGE
          .
        - docker push $DOCKER_IMAGE
        - $TRAVIS_BUILD_DIR/hyper pull $DOCKER_IMAGE
        - HYPERSH_DANGLING_IMAGES=$($TRAVIS_BUILD_DIR/hyper images -q --filter "dangling=true")
        - echo HYPERSH_DANGLING_IMAGES=$HYPERSH_DANGLING_IMAGES
        - $TRAVIS_BUILD_DIR/hyper rmi $HYPERSH_DANGLING_IMAGES || true
        - export HYPERSH_FUNC_NAME=evaluate-$TRAVIS_BRANCH
        - $TRAVIS_BUILD_DIR/hyper func rm $HYPERSH_FUNC_NAME || true
        - >
          $TRAVIS_BUILD_DIR/hyper func create
          --name $HYPERSH_FUNC_NAME
          --env AWS_DEFAULT_REGION=us-east-1
          --env AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
          --env AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
          $DOCKER_IMAGE
          python -m turingarena_impl.api.hypersh_evaluate
        - export HYPERSH_FUNC_ID=$($TRAVIS_BUILD_DIR/hyper func inspect $HYPERSH_FUNC_NAME | jq -r .[0].UUID)
        - echo HYPERSH_FUNC_ID=$HYPERSH_FUNC_ID
        - cd backend/
        - npm install
        - serverless deploy
    - if: branch = develop AND type != pull_request
      stage: deploy
      script:
        - docker pull $DOCKER_IMAGE
        - docker tag $DOCKER_IMAGE turingarena/turingarena
        - docker push turingarena/turingarena
    - stage: deploy
      script:
        - pip install --upgrade setuptools twine wheel
        - cd cli/
        - echo "VERSION='$CLI_VERSION'" > turingarena_common/build_version.py
        - python setup.py egg_info bdist_wheel
        - twine upload dist/*
